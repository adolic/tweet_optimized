version: "3.8"

services:
  tweet-optimizer-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: twitter_forecast
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5467:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tweet-optimizer-network

  tweet-optimizer-backend:
    build: 
      context: ./backend
      target: development
    ports:
      - "8001:8000"
    volumes:
      - type: bind
        source: ./backend
        target: /app/backend
    environment:
      - PYTHONPATH=/app
      - DB_HOST=tweet-optimizer-postgres
      - DB_PORT=5432
      - DB_NAME=twitter_forecast
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    env_file:
      - ./backend/.env.development
    depends_on:
      - tweet-optimizer-postgres
    networks:
      - tweet-optimizer-network

  tweet-optimizer-frontend:
    build:
      context: ./frontend
      target: development
    ports:
      - "3001:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env.development
    depends_on:
      - tweet-optimizer-backend
    networks:
      - tweet-optimizer-network

  tweet-optimizer-nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - type: bind
        source: ./conf/nginx/conf.d/default.dev.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./conf/nginx/nginx.dev.conf
        target: /etc/nginx/nginx.conf
    depends_on:
      - tweet-optimizer-frontend
      - tweet-optimizer-backend
    networks:
      - tweet-optimizer-network

volumes:
  postgres_data:
    name: tweet-optimizer-postgres-data

networks:
  tweet-optimizer-network:
    name: tweet-optimizer-network 